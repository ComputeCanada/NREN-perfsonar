#cloud-config
hostname: centralManagement
runcmd: 
  #Scripts
  - bash /root/disableSEL.sh
  - bash /root/install.sh #--local
  - bash /root/setupDocker.sh
  - bash /root/setupPWA.sh #PsconfigWebAdmin
  - bash /root/setupCMA.sh #Central Measurement Archive
  - bash /root/sendDone.sh
  #- systemctl reboot #Docker containers should restart/update automatically
write_files:
  - content: |
      #!/bin/bash
      echo "Subject: Cloud-Init Central Management Done" | sendmail pierre-antoine.villeneuve@calculquebec.ca
    path: /root/sendDone.sh
  - content: |
      #!/bin/bash
      echo "Saving latest docker images..."
      sudo docker save $(docker images | sed '1d' | awk '/latest/ {print $1 ":" $2 }') -o /media/data/PWAdocker.tar
    path: /root/saveDocker.sh
    permissions: '0755'
  - content: |
      #!/bin/bash
      #/usr/sbin/esmond_manage add_ps_metadata_post_user pavillen #Pour auth avec api key
      #/usr/sbin/esmond_manage add_timeseries_post_user pavillen > /root/esmondAPIkey.txt
      echo "RewriteEngine On" >> /etc/httpd/conf/httpd.conf
      echo "RewriteRule /.noindex* http://206.12.91.154/maddash-webui/ [R]" >> /etc/httpd/conf/httpd.conf
      systemctl enable maddash-server
      systemctl start maddash-server
      systemctl enable httpd
      systemctl start httpd
      echo -e pavillen | htpasswd -i /etc/maddash/maddash-webui/admin-users pavillen
      #Allow to POST to archive (Debug purposes)
      /usr/sbin/esmond_manage add_user_ip_address pavillen 132.219.139.24 132.219.137.25 #132.219.0.0/16
    path: /root/setupCMA.sh
  - content: |
      [Unit]
      Description=Updates and starts PWA docker containers on system restart.
      After=docker.service
      Requires=docker.service

      [Service]
      TimeoutStartSec=0
      ExecStart=/usr/local/sbin/update_pwa_containers.sh

      [Install]
      WantedBy=multi-user.target
    path: /etc/systemd/system/PWAdocker.service
  - content: |
      #!/bin/bash
      timedatectl set-timezone America/New_York #I'm running this instance in BC and can't bother converting time
      yum install -y vim wget
      yum install -y epel-release
      yum install -y http://software.internet2.edu/rpms/el7/x86_64/main/RPMS/perfSONAR-repo-0.8-1.noarch.rpm
      if [ $1 = "--local" ]; then
         mkdir /media/data
         mount /dev/vdb1 /media/data && echo "************* Successfully mounted data volume! ***************"
         yum -y --nogpgcheck localinstall /media/data/packages/perfsonar-cma/*.rpm
         yum -y --nogpgcheck localinstall /media/data/packages/docker/*.rpm
         cp /media/data/pwa.sample.tar.gz /
      else
         wget https://github.com/perfsonar/psconfig-web/raw/master/deploy/docker/pwa.sample.tar.gz
      fi 
      #Just in case we missed something
      yum install -y perfsonar-centralmanagement
      yum install -y docker
    path: /root/install.sh
  - content: |
      #!/bin/bash
      echo 0 > /sys/fs/selinux/enforce
      sed -i 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
    path: /root/disableSEL.sh
  - content: |
      #!/bin/bash
      #More about users: https://docs.perfsonar.net/pwa_user_management.html
      #To enable email signup see: https://docs.perfsonar.net/pwa_configure.html#authentication-service-sca-auth
      echo -n "Enter desired username and press [ENTER]: "
      read user
      echo -n "Enter desired password and press [ENTER]: "
      read passwd
      echo -n "Enter full name and press [ENTER]: "
      read name
      echo -n "Enter email and press [ENTER]: "
      read email
      echo "Addin user $user to admins..."
      docker exec sca-auth /app/bin/auth.js useradd --username $user --fullname "$name" --email "$email" [--password "$passwd"]
      docker exec sca-auth /app/bin/auth.js modscope --username $user --add '{"pwa": ["user", "admin"]}'
      docker exec sca-auth /app/bin/auth.js setpass --username $user --password "$passwd"
    path: /root/pwaAddUserAdmin.sh
    permissions: '0755'
  - content: |
      #!/bin/bash
      #Extract PWA scripts
      tar -C /etc -xvf pwa.sample.tar.gz pwa && sudo tar -C /usr/local/sbin --strip-components=1 -xvf pwa.sample.tar.gz scripts
      /usr/local/sbin/generate_nginx_cert.sh
      /usr/local/sbin/init_docker.sh

      #PWA must run on a different port than MadDash ie. 8000 and 8443
      sed -i 's#listen       80;#listen       8000;#g' /etc/pwa/nginx/conf.d/pwa.conf
      sed -i 's#listen       443 ssl;#listen       8443;#g' /etc/pwa/nginx/conf.d/pwa.conf
      sed -i 's#-p 80:80#-p 8000:8000#g' /usr/local/sbin/start_pwa_containers.sh
      sed -i 's#-p 443:443#-p 8443:8443#g' /usr/local/sbin/start_pwa_containers.sh

      #Start containers for the first time
      docker load -i /media/data/PWAdocker.tar #Won't work on normal install.
      #Thanks but no thanks for relative paths...
      sed -i 's#./start_pwa_containers.sh#/usr/local/sbin/start_pwa_containers.sh#g' /usr/local/sbin/update_pwa_containers.sh
      #Create reset script
      sed '24,29d' /usr/local/sbin/update_pwa_containers.sh  > /usr/local/sbin/reset_pwa_containers.sh
      chmod +x /usr/local/sbin/reset_pwa_containers.sh
      systemctl daemon-reload
      systemctl enable PWAdocker.service
      systemctl start PWAdocker.service #Update/Start containers
      /usr/local/sbin/start_pwa_containers.sh
    path: /root/setupPWA.sh
  - content: |
      #!/bin/bash
      echo '{"graph": "/usr/local/docker"}' > /etc/docker/daemon.json
      systemctl enable docker
      systemctl start docker
    path: /root/setupDocker.sh
output: { all: "| tee -a /var/log/output-cloud-init.log" }
